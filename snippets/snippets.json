{
    "Bricks badge default": {
        "prefix": "bx-badge-default",
        "body": [
            "<Bx.Badge color=\"${1|one,two,three|}\">$2</Bx.Badge>"
        ],
        "description": "Bricks badge default",
        "scope": ""
    },
    "Bricks button accent": {
        "prefix": "bx-button-accent",
        "body": [
            "<Bx.Button",
            "    accent>",
            "    $1",
            "</Bx.Button>"
        ],
        "description": "Bricks button accent",
        "scope": ""
    },
    "Bricks button default": {
        "prefix": "bx-button-default",
        "body": [
            "<Bx.Button>",
            "    $1",
            "</Bx.Button>"
        ],
        "description": "Bricks button default",
        "scope": ""
    },
    "Bricks button flat": {
        "prefix": "bx-button-flat",
        "body": [
            "<Bx.Button",
            "    flat>",
            "    $1",
            "</Bx.Button>"
        ],
        "description": "Bricks button flat",
        "scope": ""
    },
    "Bricks button onclick": {
        "prefix": "bx-button-onclick",
        "body": [
            "<Bx.Button",
            "    onClick={${1:this.handleClick}}>",
            "    $2",
            "</Bx.Button>"
        ],
        "description": "Bricks button onclick",
        "scope": ""
    },
    "Bricks button primary": {
        "prefix": "bx-button-primary",
        "body": [
            "<Bx.Button",
            "    primary>",
            "    $1",
            "</Bx.Button>"
        ],
        "description": "Bricks button primary",
        "scope": ""
    },
    "Bricks card default": {
        "prefix": "bx-card-default",
        "body": [
            "<Bx.Card>",
            "    <Bx.Card.Header ",
            "        title=\"${1:Title}\" ",
            "        subTitle=\"${2:SubTitle}\"/>",
            "    <Bx.Card.Content>",
            "        <p>",
            "            ${1:Title} + ${2:SubTitle}",
            "        </p>",
            "    </Bx.Card.Content>",
            "    <Bx.Card.Actions>",
            "        <Bx.Button ",
            "            primary>",
            "            ${3:PrimaryAction}",
            "        </Bx.Button>",
            "        <Bx.Button ",
            "            accent ",
            "            flat>",
            "            ${4:SecondaryAction}",
            "        </Bx.Button>",
            "    </Bx.Card.Actions>",
            "</Bx.Card>"
        ],
        "description": "Bricks card default",
        "scope": ""
    },
    "Bricks card header-menu-actions": {
        "prefix": "bx-card-header-menu-actions",
        "body": [
            "<Bx.Card>",
            "    <Bx.Card.Header title=\"${1:Title}\" ",
            "        subTitle=\"${2:SubTitle}\" ",
            "        avatar={",
            "        <Bx.Avatar size=\"lg\">",
            "            <img src=\"$3\">",
            "        </Bx.Avatar>} ",
            "        overflowMenu={",
            "            <Bx.OverflowMenu>",
            "                <Bx.ListView>",
            "                    <Bx.ListItem>",
            "                        <Bx.ListItem.Content>",
            "                            <Bx.ListItem.Title>menu entry...</Bx.ListItem.Title>",
            "                        </Bx.ListItem.Content>",
            "                    </Bx.ListItem>",
            "                    <Bx.ListItem>",
            "                        <Bx.ListItem.Content>",
            "                            <Bx.ListItem.Title>menu entry...</Bx.ListItem.Title>",
            "                        </Bx.ListItem.Content>",
            "                    </Bx.ListItem>",
            "                </Bx.ListView>",
            "            </Bx.OverflowMenu>",
            "        }  />",
            "        <Bx.Card.Content>",
            "            Sample content...",
            "        </Bx.Card.Content>",
            "        <Bx.Card.Actions>",
            "            <Bx.Button primary>",
            "                ${4:OK}",
            "            </Bx.Button>",
            "            <Bx.Button accent flat>",
            "                ${5:Cancel}",
            "            </Bx.Button>",
            "        </Bx.Card.Actions>",
            "</Bx.Card>"
        ],
        "description": "Bricks card header-menu-actions",
        "scope": ""
    },
    "Bricks chip children-deletable-onclick": {
        "prefix": "bx-chip-children-deletable-onclick",
        "body": [
            "<Bx.Chip",
            "    contact-color=\"${1:color}\"",
            "    deletable",
            "    id=\"$2\"",
            "    label=\"$3\"",
            "    onClick={${4:handleClick}}",
            "    onClickDeletable={${4:handleDelete}}>",
            "    <Bx.Icon>",
            "        ${4:icon}",
            "    </Bx.Icon>",
            "</Bx.Chip>"
        ],
        "description": "Bricks chip children-deletable-onclick",
        "scope": ""
    },
    "Bricks chip default": {
        "prefix": "bx-chip-default",
        "body": [
            "<Bx.Chip",
            "    deletable",
            "    id=\"$1\"",
            "    label=\"$2\"/>"
        ],
        "description": "Bricks chip default",
        "scope": ""
    },
    "Bricks chip deletable": {
        "prefix": "bx-chip-deletable",
        "body": [
            "<Bx.Chip",
            "    deletable",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "    onClickDeletable=${3:handleMethod} />"
        ],
        "description": "Bricks chip deletable",
        "scope": ""
    },
    "Bricks chip onclick": {
        "prefix": "bx-chip-onclick",
        "body": [
            "<Bx.Chip",
            "    deletable",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "    onClick=${3:handleMethod} />"
        ],
        "description": "Bricks chip onclick",
        "scope": ""
    },
    "Bricks chip use-children": {
        "prefix": "bx-chip-use-children",
        "body": [
            "<Bx.Chip",
            "    contact-color=\"${1:Color}\"",
            "    id=\"$2\"",
            "    label=\"$3\">",
            "    <Bx.Icon>",
            "        ${4:Icon}",
            "    </Bx.Icon>",
            "</Bx.Chip>"
        ],
        "description": "Bricks chip use-children",
        "scope": ""
    },
    "Bricks index default": {
        "prefix": "bx-index-default",
        "body": [
            "import React, {PureComponent} from 'react';",
            "/**",
            "* @author ${1:Author} <${2:Email}@wssim.com.br>",
            "* @since $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE",
            "*/",
            "export default class ${3:${TM_FILENAME/(.*)\\..+$/$1/}} extends PureComponent {",
            "",
            "    static propTypes = {",
            "        $5",
            "    }",
            "",
            "    static defaultProps = {",
            "        $6",
            "    }",
            "",
            "    render() {",
            "        return (",
            "            $7",
            "        );",
            "    }",
            "}"
        ],
        "description": "Bricks index default",
        "scope": ""
    },
    "Bricks input-text default": {
        "prefix": "bx-input-text-default",
        "body": [
            "<Bx.InputText",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "",
            "    onChange={this.handleOnChange}",
            "    required",
            "    type=\"text\"",
            "    value={this.props.$3} />"
        ],
        "description": "Bricks input-text default",
        "scope": ""
    },
    "Bricks input-text email": {
        "prefix": "bx-input-text-email",
        "body": [
            "<Bx.InputText",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "",
            "    onChange={this.handleOnChange}",
            "    required",
            "    type=\"email\"",
            "    value={this.props.$3} />"
        ],
        "description": "Bricks input-text email",
        "scope": ""
    },
    "Bricks input-text password": {
        "prefix": "bx-input-text-password",
        "body": [
            "<Bx.InputText",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "",
            "    onChange={this.handleOnChange}",
            "    required",
            "    type=\"password\"",
            "    value={this.props.$3} />"
        ],
        "description": "Bricks input-text password",
        "scope": ""
    },
    "Bricks input-text tel": {
        "prefix": "bx-input-text-tel",
        "body": [
            "<Bx.InputText",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "",
            "    onChange={this.handleOnChange}",
            "    required",
            "    type=\"tel\"",
            "    value={this.props.$3} />"
        ],
        "description": "Bricks input-text tel",
        "scope": ""
    },
    "Bricks input-text url": {
        "prefix": "bx-input-text-url",
        "body": [
            "<Bx.InputText",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "",
            "    onChange={this.handleOnChange}",
            "    required",
            "    type=\"url\"",
            "    value={this.props.$3} />"
        ],
        "description": "Bricks input-text url",
        "scope": ""
    },
    "Bricks listview default": {
        "prefix": "bx-listview-default",
        "body": [
            "    <Bx.SubHeader>",
            "        $1",
            "    </Bx.SubHeader>",
            "    <Bx.ListView",
            "        avatar",
            "        border",
            "        item-renderer={_item-renderer}",
            "        items={List [ [object Object], [object Object], [object Object] ]} />"
        ],
        "description": "Bricks listview default",
        "scope": ""
    },
    "Bricks switch checked": {
        "prefix": "bx-switch-checked",
        "body": [
            "    <Bx.Switch",
            "        id=\"$1\"",
            "        checked",
            "        label=\"$2\"",
            "        onChange={this.onChangeChecked} />"
        ],
        "description": "Bricks switch checked",
        "scope": ""
    },
    "Bricks switch default": {
        "prefix": "bx-switch-default",
        "body": [
            "    <Bx.Switch",
            "        id=\"$1\"",
            "        label=\"$2\"",
            "        onChange={this.onChangeChecked} />"
        ],
        "description": "Bricks switch default",
        "scope": ""
    },
    "Bricks tabs default": {
        "prefix": "bx-tabs-default",
        "body": [
            "<Bx.Tabs id=\"tabs\">",
            "    <Bx.TabHeader>",
            "        <Bx.TabHeader.Item text=\"${1:Tab1}\" />",
            "        <Bx.TabHeader.Item text=\"${2:Tab2}\" />",
            "        <Bx.TabHeader.Item text=\"${3:Tab3}\" />",
            "    </Bx.TabHeader>",
            "    <Bx.TabContent>",
            "        <Bx.TabContent.Item>",
            "\t\t\t\t${1:Tab1}",
            "\t\t</Bx.TabContent.Item>",
            "        <Bx.TabContent.Item>",
            "\t\t\t\t${2:Tab2}",
            "\t\t</Bx.TabContent.Item>",
            "        <Bx.TabContent.Item>",
            "\t\t\t\t${3:Tab3}",
            "\t\t</Bx.TabContent.Item>",
            "    </Bx.TabContent>",
            "</Bx.Tabs>"
        ],
        "description": "Bricks tabs default",
        "scope": ""
    },
    "Bricks text default": {
        "prefix": "bx-text-default",
        "body": [
            "    <Bx.Text",
            "        bold",
            "        capitalize",
            "        color=\"${1:Color\"",
            "        deleted",
            "        ellipsis",
            "        italic",
            "        left-space",
            "        lines={1}",
            "        lowercase",
            "        right-space",
            "        size={${2:1.0|2.0}}",
            "        underline",
            "        uppercase>",
            "        $3",
            "    </Bx.Text>"
        ],
        "description": "Bricks text default",
        "scope": ""
    },
    "Bricks text tooltip": {
        "prefix": "bx-text-tooltip",
        "body": [
            "    <Bx.Text \r",
            "        color=${1:Color} \r",
            "        \r",
            "        data-for=\"tooltip\" \r",
            "        data-tip>\r",
            "            ${2:Label}\r",
            "    </Bx.Text>\r",
            "    <Bx.Tooltip id=\"tooltip\">\r",
            "        ${3:TooltipText}\r",
            "    </Bx.Tooltip>"
        ],
        "description": "Bricks text tooltip",
        "scope": ""
    },
    "Bricks text-area text-area-required": {
        "prefix": "bx-text-area-text-area-required",
        "body": [
            "<Bx.TextArea",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "    maxLength={${3:MaxLength}}",
            "    onChange={this.handleChange}",
            "    required",
            "    value={this.props.$4} />"
        ],
        "description": "Bricks text-area text-area-required",
        "scope": ""
    },
    "Bricks text-area text-area": {
        "prefix": "bx-text-area-text-area",
        "body": [
            "<Bx.TextArea",
            "    id=\"$1\"",
            "    label=\"$2\"",
            "    maxLength={${3:MaxLength}}",
            "    onChange={this.handleChange}",
            "    value={this.props.$4} />"
        ],
        "description": "Bricks text-area text-area",
        "scope": ""
    },
    "Mjolnir select phone": {
        "prefix": "mj-select-phone",
        "body": [
            "<Select",
            "    label={Lion.getMessage('phone::phoneType')}",
            "    value={item.phoneType}",
            "    dataSource={this.fetchPhoneTypes}",
            "    dataTextField=\"description\"",
            "    onChange={this.handleChange.phoneType}",
            "    error={error.phoneType}",
            "    required />"
        ],
        "description": "Mjolnir select phone",
        "scope": ""
    },
    "Mjolnir textinput phone": {
        "prefix": "mj-textinput-phone",
        "body": [
            "<TextInput",
            "    label={Lion.getMessage('phone::phone')}",
            "    value={item.phoneNumber}",
            "    onChangeText={this.handleChange.phoneNumber}",
            "    maxLength={phoneMaxLength}",
            "    keyboardType=\"numeric\"",
            "    error={error.phoneNumber}",
            "    required />"
        ],
        "description": "Mjolnir textinput phone",
        "scope": ""
    }
}